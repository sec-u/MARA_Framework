
Auto

Contents:

class androguard.core.analysis.auto.AndroAuto(settings)

    Bases: object

    The main class which analyse automatically android apps by calling methods from a specific object :param settings: the settings of the analysis :type settings: dict

    dump()

        Dump the analysis

    dump_file(filename)

        Dump the analysis in a filename

    go()

        Launch the analysis

class androguard.core.analysis.auto.DefaultAndroAnalysis

    Bases: object

    This class can be used as a template in order to analyse apps

    analysis_adex(log, adexobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            adexobj – a VMAnalysis object

        Return type:	

        a boolean

    analysis_apk(log, apkobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            apkobj – a APK object

        Return type:	

        a boolean

    analysis_app(log, apkobj, dexobj, adexobj)

        This method is called if you wish to analyse the final app
        Parameters:	

            log – an object which corresponds to a unique app
            apkobj – a APK object
            dexobj – a DalvikVMFormat object
            adexobj – a VMAnalysis object

    analysis_arsc(log, arscobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            arscobj – a ARSCParser object

        Return type:	

        a boolean

    analysis_axml(log, axmlobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            axmlobj – a AXMLPrinter object

        Return type:	

        a boolean

    analysis_dex(log, dexobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            dexobj – a DalvikVMFormat object

        Return type:	

        a boolean

    analysis_dey(log, deyobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            deyobj – a DalvikOdexVMFormat object

        Return type:	

        a boolean

    crash(log, why)

        This method is called if a crash appends
        Parameters:	

            log – an object which corresponds to a unique app
            why – the string exception

    create_adex(log, dexobj)

        This method is called in order to create a VMAnalysis object
        Parameters:	

            log – an object which corresponds to a unique app
            dexobj – a DalvikVMFormat object

        Rytpe :	

        a VMAnalysis object

    create_apk(log, fileraw)

        This method is called in order to create a new APK object
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw apk (a string)

        Return type:	

        an APK object

    create_arsc(log, fileraw)

        This method is called in order to create a new ARSC object
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw arsc (a string)

        Return type:	

        an APK object

    create_axml(log, fileraw)

        This method is called in order to create a new AXML object
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw axml (a string)

        Return type:	

        an APK object

    create_dex(log, dexraw)

        This method is called in order to create a DalvikVMFormat object
        Parameters:	

            log – an object which corresponds to a unique app
            dexraw – the raw classes.dex (a string)

        Return type:	

        a DalvikVMFormat object

    create_dey(log, deyraw)

        This method is called in order to create a DalvikOdexVMFormat object
        Parameters:	

            log – an object which corresponds to a unique app
            dexraw – the raw odex file (a string)

        Return type:	

        a DalvikOdexVMFormat object

    dump()

        This method is called to dump the result
        Parameters:	log – an object which corresponds to a unique app

    dump_file(filename)

        This method is called to dump the result in a file
        Parameters:	

            log – an object which corresponds to a unique app
            filename – the filename to dump the result

    fetcher(q)

        This method is called to fetch a new app in order to analyse it. The queue must be fill with the following format: (filename, raw)
        Parameters:	q – the Queue to put new app

    filter_file(log, fileraw)

        This method is called in order to filer a specific app
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw app (a string)

        Return type:	

        a set with 2 elements, the return value (boolean) if it is necessary to

        continue the analysis and the file type

    finish(log)

        This method is called before the end of the analysis
        Parameters:	log – an object which corresponds to a unique app

class androguard.core.analysis.auto.DirectoryAndroAnalysis(directory)

    Bases: androguard.core.analysis.auto.DefaultAndroAnalysis

    A simple class example to analyse a directory

    analysis_adex(log, adexobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            adexobj – a VMAnalysis object

        Return type:	

        a boolean

    analysis_apk(log, apkobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            apkobj – a APK object

        Return type:	

        a boolean

    analysis_app(log, apkobj, dexobj, adexobj)

        This method is called if you wish to analyse the final app
        Parameters:	

            log – an object which corresponds to a unique app
            apkobj – a APK object
            dexobj – a DalvikVMFormat object
            adexobj – a VMAnalysis object

    analysis_arsc(log, arscobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            arscobj – a ARSCParser object

        Return type:	

        a boolean

    analysis_axml(log, axmlobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            axmlobj – a AXMLPrinter object

        Return type:	

        a boolean

    analysis_dex(log, dexobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            dexobj – a DalvikVMFormat object

        Return type:	

        a boolean

    analysis_dey(log, deyobj)

        This method is called in order to know if the analysis must continue
        Parameters:	

            log – an object which corresponds to a unique app
            deyobj – a DalvikOdexVMFormat object

        Return type:	

        a boolean

    crash(log, why)

        This method is called if a crash appends
        Parameters:	

            log – an object which corresponds to a unique app
            why – the string exception

    create_adex(log, dexobj)

        This method is called in order to create a VMAnalysis object
        Parameters:	

            log – an object which corresponds to a unique app
            dexobj – a DalvikVMFormat object

        Rytpe :	

        a VMAnalysis object

    create_apk(log, fileraw)

        This method is called in order to create a new APK object
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw apk (a string)

        Return type:	

        an APK object

    create_arsc(log, fileraw)

        This method is called in order to create a new ARSC object
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw arsc (a string)

        Return type:	

        an APK object

    create_axml(log, fileraw)

        This method is called in order to create a new AXML object
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw axml (a string)

        Return type:	

        an APK object

    create_dex(log, dexraw)

        This method is called in order to create a DalvikVMFormat object
        Parameters:	

            log – an object which corresponds to a unique app
            dexraw – the raw classes.dex (a string)

        Return type:	

        a DalvikVMFormat object

    create_dey(log, deyraw)

        This method is called in order to create a DalvikOdexVMFormat object
        Parameters:	

            log – an object which corresponds to a unique app
            dexraw – the raw odex file (a string)

        Return type:	

        a DalvikOdexVMFormat object

    dump()

        This method is called to dump the result
        Parameters:	log – an object which corresponds to a unique app

    dump_file(filename)

        This method is called to dump the result in a file
        Parameters:	

            log – an object which corresponds to a unique app
            filename – the filename to dump the result

    filter_file(log, fileraw)

        This method is called in order to filer a specific app
        Parameters:	

            log – an object which corresponds to a unique app
            fileraw – the raw app (a string)

        Return type:	

        a set with 2 elements, the return value (boolean) if it is necessary to

        continue the analysis and the file type

    finish(log)

        This method is called before the end of the analysis
        Parameters:	log – an object which corresponds to a unique app

